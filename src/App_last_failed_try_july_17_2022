import React, { Component } from 'react'
import Web3 from 'web3'
import logo from './logo.svg';
import './App.css';
import { VOTING_ABI, VOTING_ADDRESS } from './config'

class App extends Component {

        state = { votes: '' }
        componentWillMount(){
                this.loadBlockchainData()
        }

        async loadBlockchainData(){
                //const web3 = new Web3(new Web3.providers.HttpProvider("http://ec2-54-184-221-155.us-west-2.compute.amazonaws.com:8545"))
                //const network = await web3.eth.net.getNetworkType()
                //console.log(network)
                //const accounts = await web3.eth.getAccounts()
                //console.log(accounts)
                //this.setState({account: accounts[0]})



                const web3 = new Web3(new Web3.providers.HttpProvider("http://ec2-35-87-242-36.us-west-2.compute.amazonaws.com:8585"))
		
	//	this.setState({web3})

		var account;

// does not work right now - have to read in automatic


                web3.eth.getAccounts().then((f) => {
                        account = f[0];
                })
		// MOD THIS TO READ DIRCTLY FROM BUILD DIRECTORY
                const abi = JSON.parse('[{"constant":true,"inputs":[{"name":"candidate","type":"bytes32"}],"name":"totalVotesFor","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"candidate","type":"bytes32"}],"name":"validCandidate","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"votesReceived","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"candidateList","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"candidate","type":"bytes32"}],"name":"voteForCandidate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"candidateNames","type":"bytes32[]"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]')
//	let jsonData = require('../../build/contract/Voting.json')
let jsonData = require('./Voting.json');
		console.log(jsonData.abi)
		console.log(jsonData.networks)

                const contract = new web3.eth.Contract(VOTING_ABI);

	//tried to remove.....	this.setState( {contract} )




                // deployed via the web3 console interface...
                //contract.options.address = "0x7Ce283138b1489907Aa6Ba4601Eb08AcdDBA1892";

		 contract.options.address = "0xACd536f90D26DF9c4AC0FDD15ab58F502eaf26FB";


                //contract.options.address = "0x71789831d83d4C8325b324eA9B5fFB27525480b5";

                const candidates = {"Johnny": "candidate-1", "Amber": "candidate-2"}

                console.log("one") 
                await contract.methods.totalVotesFor(web3.utils.asciiToHex('Johnny')).call(console.log)
		console.log("two")
                await contract.methods.voteForCandidate(web3.utils.asciiToHex('Johnny')).send({gas: 140000, from: '0x73a0f2A8C094931b24c9e8717F8bb2C582f1cA95' });

		console.log("three")


                await contract.methods.totalVotesFor(web3.utils.asciiToHex('Johnny')).call(console.log)




        }

//  constructor(props){
//	  	super(props)
//	  	this.state = {
//			account: '',
//			JohnnyVote: 0,
//			AmberVote: 0,
//			loading: true
//			//data: todoList   // new portion
//
//		}
//
//	console.log("constructor")
  // this.voteForJohnny = this.voteForJohnny.bind(this)
 //  this.voteForAmber = this.voteForAmber.bind(this)
 // }

//      voteForCandidate(){
//
//              contract.methods.totalVotesFor(web3.utils.asciiToHex('Rama')).call(console.log)
//      }


//    state = {
//      johnnyCount: 1
//     , amberCount: 1
//    }


 //   voteForJohnny = () => {
 ////       this.setState((prevState) =>({ johnnyCount : prevState.johnnyCount + 1 }));
//	console.log("vj   one"); 


  // this.state.contract.methods.voteForCandidate(this.state.web3.utils.asciiToHex('Johnny')).send({gas: 140000, from: '0x73a0f2A8C094931b24c9e8717F8bb2C582f1cA95'});
//	console.log("vj two");
 //  this.state.contract.methods.totalVotesFor(this.state.web3.utils.asciiToHex('Johnny')).call(console.log)
//
//
//
 //   };

//    voteForAmber = () => {
//        this.setState((prevState) => ({ amberCount : prevState.amberCount + 1   }));
 //   this.state.contract.methods.voteForCandidate(this.state.web3.utils.asciiToHex('Amber')).send({gas: 140000, from: '0x73a0f2A8C094931b24c9e8717F8bb2C582f1cA95'});

   // this.state.contract.methods.totalVotesFor(this.state.web3.utils.asciiToHex('Amber')).call(console.log)

  //  };


//      <button onClick={() => voteForCandidate()}> vote Again! </button>
render(){

        return (
            <>
                <div>
                    <button onClick={this.Unilevel}> Uni Instruction</button>
                    <button onClick={this.Scllevel}> School Instruction</button>
                </div>
                <h5>Johnny count: {this.state.johnnyCount}</h5>
                <h5>Amber count: {this.state.amberCount}</h5>
            </>
        );
    }





}
export default App;
